{"version":3,"sources":["actions/coordsActions/index.js","actions/yMapsActions/index.js","actions/index.js","reducers/coordsReducer/index.js","reducers/yMapsReducer/index.js","reducers/index.js","store/index.js","components/routeEditor/StyledComps.js","components/coordsSetter/StyledComps.js","components/coordsSetter/CoordsSetter.js","components/coordItem/StyledComps.js","components/coordItem/CoordItem.js","components/listOfCoords/StyledComps.js","components/listOfCoords/ListOfCoords.js","responsiveDesign/index.js","components/routeEditor/RouteEditor.js","components/map/StyledComps.js","components/map/Map.js","App.js","serviceWorker.js","index.js"],"names":["addCoord","name","lat","lng","id","uuid","type","CONSTANTS","ADD_COORD","payload","initYMapsApi","dispatch","ymaps","load","then","maps","yMapsApi","INIT_YMAPS_API","catch","error","console","log","DELETE_COORD","DND_COORD","EDIT_COORD","initialState","present","lastAction","undefined","undoableCoords","undoable","state","action","newCoord","newCoords","newLastAction","actionIndex","splice","findIndex","x","slice","startIndex","endIndex","removed","map","coord","filter","distinctState","yMapsReducer","combineReducers","coords","coordsReducer","yMaps","store","createStore","rootReducer","applyMiddleware","thunk","RouteEditorItemsholder","styled","div","props","mobile","HamburgerIcon","Menu","CloseIcon","Close","CoordSetterForm","NewNodeInput","input","CoordsSetter","memo","useState","coordName","setCoordName","onSubmit","event","a","key","geocodePlace","gcoordName","glat","glng","decodeError","result","returnResult","res","firstGeoObject","geoObjects","get","getAddressLine","resultCoords","geometry","getCoordinates","geocode","test-data","onKeyDown","onChange","target","value","placeholder","connect","CoordItemBox","DeleteButton","Icon","CoordItem","onClick","deleteCoord","DragDropContextHolder","ListOfCoords","onDragEnd","destination","source","index","droppableId","provided","droppableProps","ref","innerRef","draggableId","test-data-coord-id","draggableProps","dragHandleProps","Mobile","maxWidth","deviseSizes","mobileMaxWidth","Desktop","minWidth","desktopMinWidth","RouteEditor","isMobile","setMoblie","isMobileListOfRoutesOpen","setMobileListOfRoutesOpen","useEffect","updateAfterResize","window","addEventListener","removeEventListener","innerWidth","length","YMap","Map","setMap","center","zoom","controls","renderRoutes","routes","route","toYandexRoutes","points","setLocationBalloon","getWayPoints","i","events","add","e","onDragEndCoord","getLength","editor","start","addViaPoints","removeAll","setMapCenter","alert","message","UndoActionCreators","undo","setCenter","wayPoints","resultWayPoints","options","set","balloonContentLayout","templateLayoutFactory","createClass","originalEvent","editCoord","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.634df8c6.chunk.js","sourcesContent":["import { CONSTANTS } from '../../actions';\r\nimport uuid from 'uuidv4';\r\n\r\nexport const addCoord = (name, lat, lng) => {\r\n    const id = uuid();\r\n    return {\r\n        type: CONSTANTS.ADD_COORD,\r\n        payload: { id, name, lat, lng }\r\n    };\r\n}\r\n\r\nexport const editCoord = (id, name, lat, lng) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_COORD,\r\n        payload: { id, name, lat, lng }\r\n    }\r\n}\r\n\r\nexport const deleteCoord = (id) => {\r\n    return {\r\n        type: CONSTANTS.DELETE_COORD,\r\n        payload: { id }\r\n    };\r\n}\r\n\r\nexport const dndCoord = (startIndex, endIndex) => {\r\n    return {\r\n        type: CONSTANTS.DND_COORD,\r\n        payload: { startIndex, endIndex }\r\n    };\r\n}","import { CONSTANTS } from '../../actions';\r\nimport ymaps from 'ymaps';\r\n\r\nconst loadYMapsApi = () => ymaps.load('https://api-maps.yandex.ru/2.1/?apikey=ec0ad35b-0d65-48bb-aff9-8343ba56b035&lang=en_US');\r\n\r\nexport const setYMapsApi = (yMapsApi) => {\r\n    return {\r\n        type: CONSTANTS.INIT_YMAPS_API,\r\n        payload: { yMapsApi }\r\n    };\r\n}\r\n\r\nexport const initYMapsApi = () => dispatch => loadYMapsApi()\r\n    .then(maps => dispatch(setYMapsApi(maps)))\r\n    .catch(error => console.log('Failed to load Yandex Maps', error));\r\n","export * from './coordsActions';\r\nexport * from './yMapsActions';\r\n\r\nexport const CONSTANTS = {\r\n    ADD_COORD: 'ADD_COORD',\r\n    DELETE_COORD: 'DELETE_COORD',\r\n    DND_COORD: 'DND_COORD',\r\n    INIT_YMAPS_API: 'INIT_YMAPS_API',\r\n    EDIT_COORD: 'EDIT_COORD'\r\n}","import { CONSTANTS } from '../../actions';\r\nimport undoable, { distinctState } from 'redux-undo';\r\n\r\nconst initialState = {\r\n    present: [],\r\n    lastAction: undefined\r\n};\r\n\r\nconst coordsReducer = (state = initialState, action) => {\r\n    const { present } = state;\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_COORD: {\r\n            const { id, name, lat, lng } = action.payload;\r\n            const newCoord = {\r\n                name,\r\n                lat,\r\n                lng,\r\n                id\r\n            }\r\n            const newCoords = [...present, newCoord];\r\n            const newLastAction = CONSTANTS.ADD_COORD;\r\n            return {\r\n                present: newCoords,\r\n                lastAction: newLastAction\r\n            };\r\n        }\r\n        case CONSTANTS.DELETE_COORD: {\r\n            const { id } = action.payload;\r\n            let newCoords = [...present];\r\n            const actionIndex = newCoords.splice(newCoords.findIndex(x => x.id === id), 1);\r\n            newCoords = [...newCoords.slice(0, actionIndex), ...newCoords.slice(actionIndex + 1)];\r\n            const newLastAction = CONSTANTS.DELETE_COORD;\r\n            return {\r\n                present: newCoords,\r\n                lastAction: newLastAction\r\n            };\r\n        }\r\n        case CONSTANTS.DND_COORD: {\r\n            const { startIndex, endIndex } = action.payload;\r\n            if (startIndex !== endIndex) {\r\n                const newCoords = [...present];\r\n                const [removed] = newCoords.splice(startIndex, 1);\r\n                newCoords.splice(endIndex, 0, removed);\r\n                const newLastAction = CONSTANTS.DND_COORD;\r\n                return {\r\n                    present: newCoords,\r\n                    lastAction: newLastAction\r\n                };\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        case CONSTANTS.EDIT_COORD: {\r\n            const { id, name, lat, lng } = action.payload;\r\n            const newCoords = [...present];\r\n            const newLastAction = CONSTANTS.EDIT_COORD;\r\n            return {\r\n                present: newCoords.map(coord => coord.id === id ? { ...coord, name: name, lat: lat, lng: lng } : coord),\r\n                lastAction: newLastAction\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst undoableCoords = undoable(coordsReducer, {\r\n    filter: distinctState()\r\n})\r\n\r\nexport default undoableCoords;","import { CONSTANTS } from '../../actions';\r\n\r\nconst initialState = null;\r\n\r\nconst yMapsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.INIT_YMAPS_API: {\r\n            const { yMapsApi } = action.payload;\r\n            return yMapsApi;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default yMapsReducer;","import { combineReducers } from 'redux';\r\nimport coordsReducer from './coordsReducer';\r\nimport yMapsReducer from './yMapsReducer';\r\n\r\nexport default combineReducers({\r\n    coords: coordsReducer,\r\n    yMaps: yMapsReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport const testStore = initialState => {\r\n    const createStoreWithMiddleware = applyMiddleware(thunk)(createStore);\r\n    return createStoreWithMiddleware(rootReducer, initialState);\r\n};\r\n\r\nexport default store;","import styled from 'styled-components';\r\nimport { Menu, Close } from '@material-ui/icons';\r\n\r\nexport const RouteEditorItemsholder = styled.div`\r\n    transition: 1s;\r\n    margin-left: 2px;\r\n    ${(props) => {\r\n        if (props.mobile) {\r\n            return 'width: 99%;';\r\n        } else {\r\n            return 'width: 30%;';\r\n        }\r\n    }}\r\n    position: absolute;\r\n`\r\n\r\nexport const HamburgerIcon = styled(Menu)`\r\n    z-index: 2000;\r\n    position: absolute;\r\n    right: 0px;\r\n    margin-top: 10px;\r\n    margin-right: 5%;\r\n`\r\n\r\nexport const CloseIcon = styled(Close)`\r\n    z-index: 2000;\r\n    position: absolute;\r\n    right: 0px;\r\n    margin-top: 10px;\r\n    margin-right: 5%;\r\n`","import styled from 'styled-components';\r\n\r\nexport const CoordSetterForm = styled.div`\r\n    transition: 1s;\r\n    z-index:2000;\r\n    position: relative;\r\n`\r\n\r\nexport const NewNodeInput = styled.input`\r\n    box-sizing: border-box;\r\n    background-color: #e9ecf1;\r\n    margin-top: 5px;\r\n    padding-left: 10px;\r\n    margin-bottom: 5px;\r\n    border-radius: 20px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    box-shadow: 5px 5px 5px #888888;\r\n    border: none;\r\n    width: 99%;\r\n    outline: none;\r\n    &::placeholder {\r\n        color: darkslategray;\r\n    }\r\n`","import React, { useState, memo } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addCoord } from '../../actions';\r\nimport { CoordSetterForm, NewNodeInput } from './StyledComps';\r\n\r\nconst CoordsSetter = memo(({ dispatch, yMaps, mobile }) => {\r\n    const [coordName, setCoordName] = useState('');\r\n\r\n    const handleChangeCoordName = event => {\r\n        setCoordName(event.target.value);\r\n    }\r\n\r\n    const onSubmit = async event => {\r\n        if (event.key === 'Enter') {\r\n            setCoordName('');\r\n            const { gcoordName, glat, glng, decodeError } = await geocodePlace(coordName);\r\n            if (!decodeError) {\r\n                dispatch(addCoord(gcoordName, glat, glng));\r\n            }\r\n        }\r\n    }\r\n\r\n    const geocodePlace = async (coordName) => {\r\n        const result = { gcoordName: coordName };\r\n        const returnResult = res => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            if (firstGeoObject) {\r\n                const name = firstGeoObject.getAddressLine();\r\n                const resultCoords = firstGeoObject.geometry.getCoordinates();\r\n                result.gcoordName = name;\r\n                result.glat = resultCoords[1];\r\n                result.glng = resultCoords[0];\r\n            } else {\r\n                result.decodeError = true;\r\n            }\r\n        }\r\n        await yMaps.geocode(coordName).then(returnResult);\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <CoordSetterForm mobile={mobile}>\r\n            <NewNodeInput test-data=\"newNodeInput\" onKeyDown={onSubmit} onChange={handleChangeCoordName} value={coordName} placeholder=\"New node\" />\r\n        </CoordSetterForm>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    yMaps: state.yMaps\r\n});\r\n\r\nexport default connect(mapStateToProps)(CoordsSetter);","import styled from 'styled-components';\r\nimport Icon from '@material-ui/icons/Delete';\r\n\r\nexport const CoordItemBox = styled.div`\r\n    white-space: nowrap;\r\n    border-radius: 10px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    ${(props) => {\r\n        if (!props.mobile) {\r\n            return 'position: relative;';\r\n        }\r\n    }}\r\n    height: 100px;\r\n    background-color:  rgba(128, 128, 128, 0.7);\r\n    text-align: center;\r\n    line-height: 100px;\r\n`\r\n\r\nexport const DeleteButton = styled(Icon)`\r\n    position: absolute;\r\n    cursor: pointer;\r\n    color: red;\r\n    ${(props) => {\r\n        if (!props.mobile) {\r\n            return 'opacity: 0.3;';\r\n        }\r\n    }}    \r\n    left: 0px;\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`","import React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCoord } from '../../actions';\r\nimport { CoordItemBox, DeleteButton } from './StyledComps';\r\n\r\nconst CoordItem = memo(({ dispatch, name, id, mobile }) => {\r\n\r\n    const onDeleteItem = () => {\r\n        dispatch(deleteCoord(id));\r\n    }\r\n\r\n    return (\r\n        <CoordItemBox mobile={mobile}>\r\n            <label test-data=\"itemName\">{name}</ label>\r\n            <DeleteButton test-data=\"deleteItemBtn\" mobile={mobile ? 1 : 0} onClick={onDeleteItem} />\r\n        </CoordItemBox>\r\n    );\r\n});\r\n\r\nexport default connect()(CoordItem);","import styled from 'styled-components';\r\n\r\nexport const DragDropContextHolder = styled.div`\r\n    ${(props) => {\r\n        if (props.mobile) {\r\n            return `\r\n                position: absolute;\r\n                top: 50px;\r\n                width: 99%;\r\n                margin-left: 5px;\r\n            `;\r\n        } else {\r\n            return 'position: relative;';\r\n        }\r\n    }}\r\n    box-sizing : border-box;\r\n    z-index: 2000;\r\n    overflow-y: scroll;\r\n    max-height: 90vh;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n        position: absolute;\r\n        width: 5px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: gray; \r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: #b30000; \r\n    }\r\n`","import React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CoordItem } from '../coordItem';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragDropContextHolder } from './StyledComps';\r\nimport { dndCoord } from '../../actions';\r\n\r\nconst ListOfCoords = memo(({ coords, dispatch, mobile }) => {\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        dispatch(dndCoord(\r\n            result.source.index,\r\n            result.destination.index\r\n        ));\r\n    }\r\n    return (\r\n        <DragDropContextHolder mobile={mobile}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided) => (\r\n                        <div\r\n                            test-data=\"listOfPlaces\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {coords.present.present.map((coord, index) => (\r\n                                <Draggable key={coord.id} draggableId={coord.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div\r\n                                            test-data=\"place\"\r\n                                            test-data-coord-id={coord.id}\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            <CoordItem\r\n                                                mobile={mobile}\r\n                                                key={coord.id}\r\n                                                name={coord.name}\r\n                                                id={coord.id}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </DragDropContextHolder>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    coords: state.coords\r\n});\r\n\r\nexport default connect(mapStateToProps)(ListOfCoords);","import React from 'react';\r\nimport Responsive from 'react-responsive';\r\nimport deviseSizes from './deviceSizes';\r\n\r\nexport const Mobile = props => <Responsive {...props} maxWidth={deviseSizes.mobileMaxWidth} />;\r\nexport const Desktop = props => <Responsive {...props} minWidth={deviseSizes.desktopMinWidth} />;","import React, { memo, useState, useEffect } from 'react';\r\nimport { RouteEditorItemsholder, HamburgerIcon, CloseIcon } from './StyledComps';\r\nimport { connect } from 'react-redux';\r\nimport { CoordsSetter } from '../coordsSetter';\r\nimport { ListOfCoords } from '../listOfCoords';\r\nimport deviseSizes from '../../responsiveDesign/deviceSizes';\r\nimport { Mobile, Desktop } from '../../responsiveDesign';\r\n\r\nconst RouteEditor = memo(({ yMaps, coords }) => {\r\n    const [isMobile, setMoblie] = useState(undefined);\r\n    const [isMobileListOfRoutesOpen, setMobileListOfRoutesOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateAfterResize();\r\n        window.addEventListener('resize', updateAfterResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            window.removeEventListener('resize', updateAfterResize);\r\n        }\r\n    }, []);\r\n\r\n    const updateAfterResize = () => {\r\n        if (window.innerWidth <= deviseSizes.mobileMaxWidth) {\r\n            setMoblie(true);\r\n        }\r\n        if (window.innerWidth >= deviseSizes.desktopMinWidth) {\r\n            setMobileListOfRoutesOpen(false);\r\n            setMoblie(false);\r\n        }\r\n    }\r\n\r\n    const OpenCloseMobileListOfRoutes = () => {\r\n        setMobileListOfRoutesOpen(!isMobileListOfRoutesOpen);\r\n    }\r\n\r\n    return (\r\n        <div test-data=\"routeEditor\">\r\n            {yMaps ? [\r\n                <RouteEditorItemsholder test-data=\"desktopItemsHolder\" key=\"desktop\" mobile={isMobile}>\r\n                    <CoordsSetter />\r\n                    <Desktop>\r\n                        <ListOfCoords />\r\n                    </Desktop>\r\n                </RouteEditorItemsholder>,\r\n                <Mobile key=\"mobile\">\r\n                    {isMobileListOfRoutesOpen ? <ListOfCoords test-data=\"mobileListOfCoords\" mobile={isMobile} /> : <div />}\r\n                    <div test-data=\"openListOfCoordsBtn\" onClick={OpenCloseMobileListOfRoutes}>\r\n                        {coords.present.present.length >= 1 ? (isMobileListOfRoutesOpen ? <CloseIcon /> : <HamburgerIcon />) : undefined}\r\n                    </div>\r\n                </Mobile>\r\n            ]\r\n                : undefined}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    yMaps: state.yMaps,\r\n    coords: state.coords\r\n});\r\n\r\nexport default connect(mapStateToProps)(RouteEditor);","import styled from 'styled-components';\r\n\r\nexport const YMap = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100vh;\r\n`","import React, { useEffect, useState, memo } from 'react';\r\nimport { YMap } from './StyledComps';\r\nimport { connect } from 'react-redux';\r\nimport { editCoord, CONSTANTS } from '../../actions';\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\r\n\r\nconst Map = memo(({ coords, yMaps, dispatch }) => {\r\n\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            setMap(yMaps ?\r\n                new yMaps.Map('map', {\r\n                    center: [55.76, 37.64],\r\n                    zoom: 7,\r\n                    controls: []\r\n                }) :\r\n                null\r\n            );\r\n        }\r\n    }, [yMaps, map]);\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            renderRoutes(coords.present.present);\r\n        }\r\n    });\r\n\r\n    const renderRoutes = (routes) => {\r\n        if (routes.length > 1) {\r\n            yMaps.route(toYandexRoutes(routes)).then(\r\n                route => {\r\n                    const points = setLocationBalloon(route.getWayPoints());\r\n                    for (let i = 0; i < points.getLength(); i++) {\r\n                        points.get(i).events.add('dragend', (e) => onDragEndCoord(routes[i].id, e));\r\n                    }\r\n                    route.editor.start({ addViaPoints: false });\r\n                    map.geoObjects.removeAll();\r\n                    map.geoObjects.add(route);\r\n                    setMapCenter(routes);\r\n                },\r\n\r\n                error => {\r\n                    alert('error: ' + error.message);\r\n                    dispatch(UndoActionCreators.undo());\r\n                }\r\n            );\r\n        } else {\r\n            map.geoObjects.removeAll();\r\n        }\r\n    }\r\n\r\n    const setMapCenter = (routes) => {\r\n        switch (true) {\r\n            case coords.present.lastAction === CONSTANTS.ADD_COORD: {\r\n                const geocoder = yMaps.geocode(toYandexRoutes(routes)[routes.length - 1]);\r\n                geocoder.then(res => {\r\n                    map.setCenter(\r\n                        res.geoObjects.get(0).geometry.getCoordinates(),\r\n                        7\r\n                    );\r\n                });\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const setLocationBalloon = (wayPoints) => {\r\n        let resultWayPoints = wayPoints;\r\n        for (let i = 0; i < resultWayPoints.getLength(); i++) {\r\n            yMaps.geocode(resultWayPoints.get(i).geometry.getCoordinates()).then(res => {\r\n                resultWayPoints.get(i).options.set({\r\n                    balloonContentLayout: yMaps.templateLayoutFactory.createClass(\r\n                        `<span>${res.geoObjects.get(0).getAddressLine()}</span>`\r\n                    )\r\n                });\r\n            });\r\n        }\r\n        return resultWayPoints;\r\n    }\r\n\r\n    const onDragEndCoord = (id, event) => {\r\n        const newCoords = event.originalEvent.target.geometry.getCoordinates();\r\n        yMaps.geocode(newCoords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            const name = firstGeoObject.getAddressLine();\r\n            const resultCoords = firstGeoObject.geometry.getCoordinates();\r\n            dispatch(editCoord(id, name, resultCoords[1], resultCoords[0]));\r\n        });\r\n    }\r\n\r\n    const toYandexRoutes = (routes) => {\r\n        const result = routes.map(route => [+route.lng, +route.lat]);\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <YMap test-data=\"yMaps\" id=\"map\" key=\"map\" />\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    coords: state.coords,\r\n    yMaps: state.yMaps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Map);","import React, { memo, useEffect } from 'react';\r\nimport { RouteEditor } from './components/routeEditor';\r\nimport { Map } from './components/map';\r\nimport { connect } from 'react-redux';\r\nimport { initYMapsApi } from './actions';\r\n\r\nconst App = memo(({ dispatch }) => {\r\n\r\n  useEffect(() => {\r\n    dispatch(initYMapsApi());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <RouteEditor />\r\n      <Map />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default connect()(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}