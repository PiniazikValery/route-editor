{"version":3,"sources":["actions/coordsActions/index.js","actions/index.js","reducers/coordsReducer.js","reducers/yMapsReducer.js","reducers/index.js","store/index.js","components/routeEditor/StyledComps.js","components/coordsSetter/StyledComps.js","components/coordsSetter/CoordsSetter.js","components/coordItem/StyledComps.js","components/coordItem/CoordItem.js","components/listOfCoords/StyledComps.js","components/listOfCoords/ListOfCoords.js","responsiveDesign/index.js","components/routeEditor/RouteEditor.js","components/map/StyledComps.js","components/map/Map.js","additionalApi/ApiInitializer.js","actions/yMapsActions/index.js","App.js","serviceWorker.js","index.js"],"names":["addCoord","name","lat","lng","id","uuid","type","CONSTANTS","ADD_COORD","payload","DELETE_COORD","DND_COORD","INIT_YMAPS_API","EDIT_COORD","initialState","present","lastAction","undefined","undoableCoords","undoable","state","action","newCoord","newCoords","newLastAction","actionIndex","splice","findIndex","x","slice","startIndex","endIndex","removed","map","coord","filter","distinctState","yMapsReducer","yMapsApi","combineReducers","coords","coordsReducer","yMaps","store","createStore","rootReducer","RouteEditorItemsholder","styled","div","props","mobile","HamburgerIcon","Menu","CloseIcon","Close","CoordSetterForm","form","NewNodeInput","input","CoordsSetter","memo","dispatch","useState","coordName","setCoordName","onSubmit","event","a","key","preventDefault","geocodePlace","gcoordName","glat","glng","decodeError","result","returnResult","res","firstGeoObject","geoObjects","get","getAddressLine","resultCoords","geometry","getCoordinates","geocode","then","onKeyDown","onChange","target","value","placeholder","connect","CoordItemBox","DeleteButton","Icon","CoordItem","onClick","deleteCoord","DragDropContextHolder","ListOfCoords","onDragEnd","destination","source","index","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Mobile","maxWidth","deviseSizes","mobileMaxWidth","Desktop","minWidth","desktopMinWidth","RouteEditor","isMobile","setMoblie","isMobileListOfRoutesOpen","setMobileListOfRoutesOpen","useEffect","updateAfterResize","window","addEventListener","removeEventListener","innerWidth","length","YMap","Map","setMap","center","zoom","controls","routes","setMapCenter","toYandexRoutes","setCenter","setLocationBalloon","wayPoints","resultWayPoints","i","options","set","balloonContentLayout","templateLayoutFactory","createClass","getLength","onDragEndCoord","originalEvent","editCoord","route","points","getWayPoints","events","add","e","editor","start","addViaPoints","removeAll","error","alert","message","UndoActionCreators","undo","ApiInitializer","this","ymaps","load","maps","catch","console","log","App","initYMaps","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e18458c3.chunk.js","sourcesContent":["import { CONSTANTS } from '../../actions';\r\nimport uuid from 'uuidv4';\r\n\r\nexport const addCoord = (name, lat, lng) => {\r\n    const id = uuid();\r\n    return {\r\n        type: CONSTANTS.ADD_COORD,\r\n        payload: { id, name, lat, lng }\r\n    };\r\n}\r\n\r\nexport const editCoord = (id, name, lat, lng) => {\r\n    return {\r\n        type: CONSTANTS.EDIT_COORD,\r\n        payload: { id, name, lat, lng }\r\n    }\r\n}\r\n\r\nexport const deleteCoord = (id) => {\r\n    return {\r\n        type: CONSTANTS.DELETE_COORD,\r\n        payload: { id }\r\n    };\r\n}\r\n\r\nexport const dndCoord = (startIndex, endIndex) => {\r\n    return {\r\n        type: CONSTANTS.DND_COORD,\r\n        payload: { startIndex, endIndex }\r\n    };\r\n}","export * from './coordsActions';\r\nexport * from './yMapsActions';\r\n\r\nexport const CONSTANTS = {\r\n    ADD_COORD: 'ADD_COORD',\r\n    DELETE_COORD: 'DELETE_COORD',\r\n    DND_COORD: 'DND_COORD',\r\n    INIT_YMAPS_API: 'INIT_YMAPS_API',\r\n    EDIT_COORD: 'EDIT_COORD'\r\n}","import { CONSTANTS } from '../actions';\r\nimport undoable, { distinctState } from 'redux-undo';\r\n\r\nconst initialState = {\r\n    present: [],\r\n    lastAction: undefined\r\n};\r\n\r\nconst coordsReducer = (state = initialState, action) => {\r\n    const { present } = state;\r\n    switch (action.type) {\r\n        case CONSTANTS.ADD_COORD: {\r\n            const { id, name, lat, lng } = action.payload;\r\n            const newCoord = {\r\n                name,\r\n                lat,\r\n                lng,\r\n                id\r\n            }\r\n            const newCoords = [...present, newCoord];\r\n            const newLastAction = CONSTANTS.ADD_COORD;\r\n            return {\r\n                present: newCoords,\r\n                lastAction: newLastAction\r\n            };\r\n        }\r\n        case CONSTANTS.DELETE_COORD: {\r\n            const { id } = action.payload;\r\n            let newCoords = [...present];\r\n            const actionIndex = newCoords.splice(newCoords.findIndex(x => x.id === id), 1);\r\n            newCoords = [...newCoords.slice(0, actionIndex), ...newCoords.slice(actionIndex + 1)];\r\n            const newLastAction = CONSTANTS.DELETE_COORD;\r\n            return {\r\n                present: newCoords,\r\n                lastAction: newLastAction\r\n            };\r\n        }\r\n        case CONSTANTS.DND_COORD: {\r\n            const { startIndex, endIndex } = action.payload;\r\n            if (startIndex !== endIndex) {\r\n                const newCoords = [...present];\r\n                const [removed] = newCoords.splice(startIndex, 1);\r\n                newCoords.splice(endIndex, 0, removed);\r\n                const newLastAction = CONSTANTS.DND_COORD;\r\n                return {\r\n                    present: newCoords,\r\n                    lastAction: newLastAction\r\n                };\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        case CONSTANTS.EDIT_COORD: {\r\n            const { id, name, lat, lng } = action.payload;\r\n            const newCoords = [...present];\r\n            const newLastAction = CONSTANTS.EDIT_COORD;\r\n            return {\r\n                present: newCoords.map(coord => coord.id === id ? { ...coord, name: name, lat: lat, lng: lng } : coord),\r\n                lastAction: newLastAction\r\n\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst undoableCoords = undoable(coordsReducer, {\r\n    filter: distinctState()\r\n})\r\n\r\nexport default undoableCoords;","import { CONSTANTS } from '../actions';\r\n\r\nconst initialState = null;\r\n\r\nconst yMapsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CONSTANTS.INIT_YMAPS_API: {\r\n            const { yMapsApi } = action.payload;\r\n            return yMapsApi;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default yMapsReducer;","import { combineReducers } from 'redux';\r\nimport coordsReducer from './coordsReducer';\r\nimport yMapsReducer from './yMapsReducer';\r\n\r\nexport default combineReducers({\r\n    coords: coordsReducer,\r\n    yMaps: yMapsReducer\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers'\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import styled from 'styled-components';\r\nimport { Menu, Close } from '@material-ui/icons';\r\n\r\nexport const RouteEditorItemsholder = styled.div`\r\n    transition: 1s;\r\n    margin-left: 2px;\r\n    ${(props) => {\r\n        if (props.mobile) {\r\n            return 'width: 99%;';\r\n        } else {\r\n            return 'width: 30%;';\r\n        }\r\n    }}\r\n    position: absolute;\r\n`\r\n\r\nexport const HamburgerIcon = styled(Menu)`\r\n    z-index: 2000;\r\n    position: absolute;\r\n    right: 0px;\r\n    margin-top: 10px;\r\n    margin-right: 5%;\r\n`\r\n\r\nexport const CloseIcon = styled(Close)`\r\n    z-index: 2000;\r\n    position: absolute;\r\n    right: 0px;\r\n    margin-top: 10px;\r\n    margin-right: 5%;\r\n`","import styled from 'styled-components';\r\n\r\nexport const CoordSetterForm = styled.form`\r\n    transition: 1s;\r\n    z-index:2000;\r\n    position: relative;\r\n`\r\n\r\nexport const NewNodeInput = styled.input`\r\n    box-sizing: border-box;\r\n    background-color: #e9ecf1;\r\n    margin-top: 5px;\r\n    padding-left: 10px;\r\n    margin-bottom: 5px;\r\n    border-radius: 20px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    box-shadow: 5px 5px 5px #888888;\r\n    border: none;\r\n    width: 99%;\r\n    outline: none;\r\n    &::placeholder {\r\n        color: darkslategray;\r\n    }\r\n`","import React, { useState, memo } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { addCoord } from '../../actions';\r\nimport { CoordSetterForm, NewNodeInput } from './StyledComps';\r\n\r\nconst CoordsSetter = memo(({ dispatch, yMaps, mobile }) => {\r\n    const [coordName, setCoordName] = useState('');\r\n\r\n    const handleChangeCoordName = event => {\r\n        setCoordName(event.target.value);\r\n    }\r\n\r\n    const onSubmit = async event => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            setCoordName('');\r\n            const { gcoordName, glat, glng, decodeError } = await geocodePlace(coordName);\r\n            if (!decodeError) {\r\n                dispatch(addCoord(gcoordName, glat, glng));\r\n            }\r\n        }\r\n    }\r\n\r\n    const geocodePlace = async (coordName) => {\r\n        const result = { gcoordName: coordName };\r\n        const returnResult = res => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            if (firstGeoObject) {\r\n                const name = firstGeoObject.getAddressLine();\r\n                const resultCoords = firstGeoObject.geometry.getCoordinates();\r\n                result.gcoordName = name;\r\n                result.glat = resultCoords[1];\r\n                result.glng = resultCoords[0];\r\n            } else {\r\n                result.decodeError = true;\r\n            }\r\n        }\r\n        await yMaps.geocode(coordName).then(returnResult);\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <CoordSetterForm mobile={mobile}>\r\n            <NewNodeInput onKeyDown={onSubmit} onChange={handleChangeCoordName} value={coordName} placeholder=\"New node\" />\r\n        </CoordSetterForm>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    yMaps: state.yMaps\r\n});\r\n\r\nexport default connect(mapStateToProps)(CoordsSetter);","import styled from 'styled-components';\r\nimport Icon from '@material-ui/icons/Delete';\r\n\r\nexport const CoordItemBox = styled.div`\r\n    border-radius: 10px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px;\r\n    ${(props) => {\r\n        if (!props.mobile) {\r\n            return 'position: relative;';\r\n        }\r\n    }}\r\n    height: 100px;\r\n    background-color:  rgba(128, 128, 128, 0.7);\r\n    text-align: center;\r\n    line-height: 100px;\r\n`\r\n\r\nexport const DeleteButton = styled(Icon)`\r\n    position: absolute;\r\n    cursor: pointer;\r\n    color: red;\r\n    ${(props) => {\r\n        if (!props.mobile) {\r\n            return 'opacity: 0.3;';\r\n        }\r\n    }}    \r\n    left: 0px;\r\n    &:hover{\r\n        opacity: 1;\r\n    }\r\n`","import React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteCoord } from '../../actions';\r\nimport { CoordItemBox, DeleteButton } from './StyledComps';\r\n\r\nconst CoordItem = memo(({ dispatch, name, id, mobile }) => {\r\n\r\n    const onDeleteItem = () => {\r\n        dispatch(deleteCoord(id));\r\n    }\r\n\r\n    return (\r\n        <CoordItemBox mobile={mobile}>\r\n            <label>{name}</ label>\r\n            <DeleteButton mobile={mobile ? 1 : 0} onClick={onDeleteItem} />\r\n        </CoordItemBox>\r\n    );\r\n});\r\n\r\nexport default connect()(CoordItem);","import styled from 'styled-components';\r\n\r\nexport const DragDropContextHolder = styled.div`\r\n    ${(props) => {\r\n        if (props.mobile) {\r\n            return `\r\n                position: absolute;\r\n                top: 50px;\r\n                width: 99%;\r\n                margin-left: 5px;\r\n            `;\r\n        } else {\r\n            return 'position: relative;';\r\n        }\r\n    }}\r\n    box-sizing : border-box;\r\n    z-index: 2000;\r\n    overflow-y: scroll;\r\n    max-height: 90vh;\r\n    overflow-x: hidden;\r\n    &::-webkit-scrollbar {\r\n        position: absolute;\r\n        width: 5px;\r\n    }\r\n    &::-webkit-scrollbar-track {\r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        background: gray; \r\n        border-radius: 10px;\r\n    }\r\n    &::-webkit-scrollbar-thumb:hover {\r\n        background: #b30000; \r\n    }\r\n`","import React, { memo } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CoordItem } from '../coordItem';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { DragDropContextHolder } from './StyledComps';\r\nimport { dndCoord } from '../../actions';\r\n\r\nconst ListOfCoords = memo(({ coords, dispatch, mobile }) => {\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n        dispatch(dndCoord(\r\n            result.source.index,\r\n            result.destination.index\r\n        ));\r\n    }\r\n    return (\r\n        <DragDropContextHolder mobile={mobile}>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <Droppable droppableId=\"droppable\">\r\n                    {(provided) => (\r\n                        <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {coords.present.present.map((coord, index) => (\r\n                                <Draggable key={coord.id} draggableId={coord.id} index={index}>\r\n                                    {(provided) => (\r\n                                        <div\r\n                                            ref={provided.innerRef}\r\n                                            {...provided.draggableProps}\r\n                                            {...provided.dragHandleProps}\r\n                                        >\r\n                                            <CoordItem\r\n                                                mobile={mobile}\r\n                                                key={coord.id}\r\n                                                name={coord.name}\r\n                                                id={coord.id}\r\n                                            />\r\n                                        </div>\r\n                                    )}\r\n                                </Draggable>\r\n                            ))}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        </DragDropContextHolder>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    coords: state.coords\r\n});\r\n\r\nexport default connect(mapStateToProps)(ListOfCoords);","import React from 'react';\r\nimport Responsive from 'react-responsive';\r\nimport deviseSizes from './deviceSizes';\r\n\r\nexport const Mobile = props => <Responsive {...props} maxWidth={deviseSizes.mobileMaxWidth} />;\r\nexport const Desktop = props => <Responsive {...props} minWidth={deviseSizes.desktopMinWidth} />;","import React, { memo, useState, useEffect } from 'react';\r\nimport { RouteEditorItemsholder, HamburgerIcon, CloseIcon } from './StyledComps';\r\nimport { connect } from 'react-redux';\r\nimport { CoordsSetter } from '../coordsSetter';\r\nimport { ListOfCoords } from '../listOfCoords';\r\nimport deviseSizes from '../../responsiveDesign/deviceSizes';\r\nimport { Mobile, Desktop } from '../../responsiveDesign';\r\n\r\nconst RouteEditor = memo(({ yMaps, coords }) => {\r\n    const [isMobile, setMoblie] = useState(undefined);\r\n    const [isMobileListOfRoutesOpen, setMobileListOfRoutesOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        updateAfterResize();\r\n        window.addEventListener('resize', updateAfterResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            window.removeEventListener('resize', updateAfterResize);\r\n        }\r\n    }, []);\r\n\r\n    const updateAfterResize = () => {\r\n        if (window.innerWidth <= deviseSizes.mobileMaxWidth) {\r\n            setMoblie(true);\r\n        }\r\n        if (window.innerWidth >= deviseSizes.desktopMinWidth) {\r\n            setMobileListOfRoutesOpen(false);\r\n            setMoblie(false);\r\n        }\r\n    }\r\n\r\n    const OpenCloseMobileListOfRoutes = () => {\r\n        setMobileListOfRoutesOpen(!isMobileListOfRoutesOpen);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <RouteEditorItemsholder mobile={isMobile}>\r\n                {yMaps ?\r\n                    [<div key=\"coordsSetter\">\r\n                        <CoordsSetter />\r\n                    </div>,\r\n                    <div key=\"listOfCoords\">\r\n                        <Desktop>\r\n                            <ListOfCoords />\r\n                        </Desktop>\r\n                    </div>]\r\n                    : undefined}\r\n            </RouteEditorItemsholder>\r\n            <Mobile>\r\n                {isMobileListOfRoutesOpen ? <ListOfCoords mobile={isMobile} /> : <div />}\r\n                <div onClick={OpenCloseMobileListOfRoutes}>\r\n                    {coords.present.present.length >= 1 ? (isMobileListOfRoutesOpen ? <CloseIcon /> : <HamburgerIcon />) : undefined}\r\n                </div>\r\n            </Mobile>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    yMaps: state.yMaps,\r\n    coords: state.coords\r\n});\r\n\r\nexport default connect(mapStateToProps)(RouteEditor);","import styled from 'styled-components';\r\n\r\nexport const YMap = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100vh;\r\n`","import React, { useEffect, useState, memo } from 'react';\r\nimport { YMap } from './StyledComps';\r\nimport { connect } from 'react-redux';\r\nimport { editCoord, CONSTANTS } from '../../actions';\r\nimport { ActionCreators as UndoActionCreators } from 'redux-undo';\r\n\r\nconst Map = memo(({ coords, yMaps, dispatch }) => {\r\n\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (!map) {\r\n            setMap(yMaps ?\r\n                new yMaps.Map('map', {\r\n                    center: [55.76, 37.64],\r\n                    zoom: 7,\r\n                    controls: []\r\n                }) :\r\n                null\r\n            );\r\n        }\r\n    }, [yMaps, map]);\r\n\r\n    const renderRoutes = (routes) => {\r\n        if (routes.length > 1) {\r\n            yMaps.route(toYandexRoutes(routes)).then(\r\n                route => {\r\n                    const points = setLocationBalloon(route.getWayPoints());\r\n                    for (let i = 0; i < points.getLength(); i++) {\r\n                        points.get(i).events.add('dragend', (e) => onDragEndCoord(routes[i].id, e));\r\n                    }\r\n                    route.editor.start({ addViaPoints: false });\r\n                    map.geoObjects.removeAll();\r\n                    map.geoObjects.add(route);\r\n                    setMapCenter(routes);\r\n                },\r\n\r\n                error => {\r\n                    alert('error: ' + error.message);\r\n                    dispatch(UndoActionCreators.undo());\r\n                }\r\n            );\r\n        } else {\r\n            map.geoObjects.removeAll();\r\n        }\r\n    }\r\n\r\n    const setMapCenter = (routes) => {\r\n        switch (true) {\r\n            case coords.present.lastAction === CONSTANTS.ADD_COORD: {\r\n                const geocoder = yMaps.geocode(toYandexRoutes(routes)[routes.length - 1]);\r\n                geocoder.then(res => {\r\n                    map.setCenter(\r\n                        res.geoObjects.get(0).geometry.getCoordinates(),\r\n                        7\r\n                    );\r\n                });\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const setLocationBalloon = (wayPoints) => {\r\n        let resultWayPoints = wayPoints;\r\n        for (let i = 0; i < resultWayPoints.getLength(); i++) {\r\n            yMaps.geocode(resultWayPoints.get(i).geometry.getCoordinates()).then(res => {\r\n                resultWayPoints.get(i).options.set({\r\n                    balloonContentLayout: yMaps.templateLayoutFactory.createClass(\r\n                        `<span>${res.geoObjects.get(0).getAddressLine()}</span>`\r\n                    )\r\n                });\r\n            });\r\n        }\r\n        return resultWayPoints;\r\n    }\r\n\r\n    const onDragEndCoord = (id, event) => {\r\n        const newCoords = event.originalEvent.target.geometry.getCoordinates();\r\n        yMaps.geocode(newCoords).then((res) => {\r\n            const firstGeoObject = res.geoObjects.get(0);\r\n            const name = firstGeoObject.getAddressLine();\r\n            const resultCoords = firstGeoObject.geometry.getCoordinates();\r\n            dispatch(editCoord(id, name, resultCoords[1], resultCoords[0]));\r\n        });\r\n    }\r\n\r\n    const toYandexRoutes = (routes) => {\r\n        const result = routes.map(route => [+route.lng, +route.lat]);\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <YMap id=\"map\" key=\"map\" />\r\n            {map ? renderRoutes(coords.present.present) : undefined}\r\n        </div>\r\n    );\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    coords: state.coords,\r\n    yMaps: state.yMaps\r\n});\r\n\r\nexport default connect(mapStateToProps)(Map);","import { initYMapsApi } from '../actions';\r\nimport ymaps from 'ymaps';\r\n\r\nclass ApiInitializer {\r\n    constructor(dispatch) {\r\n        this.dispatch = dispatch;\r\n    }\r\n\r\n    initYMaps() {\r\n        ymaps\r\n            .load('https://api-maps.yandex.ru/2.1/?apikey=ec0ad35b-0d65-48bb-aff9-8343ba56b035&lang=en_US')\r\n            .then(maps => this.dispatch(initYMapsApi(maps)))\r\n            .catch(error => console.log('Failed to load Yandex Maps', error));\r\n    }\r\n}\r\n\r\nexport default ApiInitializer;","import { CONSTANTS } from '../../actions';\r\n\r\n\r\nexport const initYMapsApi = (yMapsApi) => {\r\n    return {\r\n        type: CONSTANTS.INIT_YMAPS_API,\r\n        payload: { yMapsApi }\r\n    };\r\n}\r\n","import React, { memo, useEffect } from 'react';\r\nimport { RouteEditor } from './components/routeEditor';\r\nimport { Map } from './components/map';\r\nimport { connect } from 'react-redux';\r\nimport { ApiInitializer } from './additionalApi';\r\n\r\nconst App = memo(({ dispatch }) => {\r\n\r\n  useEffect(() => {\r\n    const apiInitializer = new ApiInitializer(dispatch);\r\n    apiInitializer.initYMaps();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <RouteEditor />\r\n      <Map />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default connect()(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}